1	import	IO
2	class	nested_ifelse
3	function	main
4	decr	a_2	basic	int	1
5	=	a_2	1
6	decr	b_3	basic	int	1
7	=	b_3	2
8	decr	c_4	basic	int	1
9	=	c_4	3
10	decr	d_5	basic	int	1
11	=	d_5	4
12	decr	e_6	basic	int	1
13	=	e_6	5
14	decr	f_7	basic	int	1
15	=	f_7	6
16	decr	t1	basic	int	1
17	=	t1	1
18	ifgoto	gt	a_2	b_3	20
19	=	t1	0
20	ifgoto	eq	t1	1	32
21	decr	t14	basic	int	1
22	=	t14	1
23	ifgoto	lt	a_2	b_3	25
24	=	t14	0
25	ifgoto	eq	t14	1	28
26	return
27	jump	31
28	decr	t15	basic	int	1
29	*	t15	b_3	2
30	=	a_2	t15
31	jump	88
32	decr	t2	basic	int	1
33	+	t2	b_3	1
34	=	a_2	t2
35	decr	t3	basic	int	1
36	=	t3	1
37	ifgoto	gt	c_4	a_2	39
38	=	t3	0
39	ifgoto	eq	t3	1	85
40	decr	t5	basic	int	1
41	=	t5	1
42	ifgoto	lt	c_4	a_2	44
43	=	t5	0
44	ifgoto	eq	t5	1	49
45	decr	t13	basic	int	1
46	*	t13	a_2	2
47	=	c_4	t13
48	jump	84
49	decr	t6	basic	int	1
50	+	t6	a_2	1
51	=	c_4	t6
52	decr	t7	basic	int	1
53	=	t7	1
54	ifgoto	eq	c_4	d_5	56
55	=	t7	0
56	decr	t8	basic	int	1
57	=	t8	1
58	ifgoto	ne	e_6	f_7	60
59	=	t8	0
60	decr	t9	basic	int	1
61	&&	t9	t7	t8
62	ifgoto	eq	t9	1	64
63	jump	68
64	ifgoto	eq	a_2	1	67
65	=	a_2	f_7
66	jump	68
67	=	a_2	e_6
68	decr	t10	basic	int	1
69	=	t10	1
70	ifgoto	ne	c_4	d_5	72
71	=	t10	0
72	decr	t11	basic	int	1
73	=	t11	1
74	ifgoto	gt	e_6	f_7	76
75	=	t11	0
76	decr	t12	basic	int	1
77	||	t12	t10	t11
78	ifgoto	eq	t12	1	80
79	jump	84
80	ifgoto	eq	a_2	1	83
81	=	a_2	f_7
82	jump	84
83	=	a_2	e_6
84	jump	88
85	decr	t4	basic	int	1
86	-	t4	a_2	1
87	=	c_4	t4
88	return
89	function	nested_ifelse_nested_ifelse
90	arg	this	object	nested_ifelse	1
91	return
