var MyLexer = require('mylexer'); //mylexer.js being the file generated by jacob
var lexer = new MyLexer();
var dict ={
    keyword_boolean : "boolean",  // 
    keyword_break  : "break",
    keyword_byte : "byte",
    keyword_case : "case",
    keyword_char : "char",
    keyword_class : "class",
    keyword_const : "const",
    keyword_continue : "continue",
    keyword_default : "default",
    keyword_do : "do",
    keyword_double : "double",
    keyword_else : "else",
    keyword_extends : "extends",
    keyword_float : "float",
    keyword_for : "for",
    keyword_if : "if",
    keyword_import : "import",
    keyword_instanceof : "instanceof",
    keyword_int : "int",
    keyword_long : "long",
    keyword_new : "new",
    keyword_return : "return",
    keyword_short : "short", 
    keyword_static : "static",
    keyword_super : "super",
    keyword_switch : "switch",
    keyword_this : "this",
    keyword_void : "void",
    keyword_while : "while",
    integer : "int",
    float : "decimal"
};

lexer.setInput("boolean break 123 #");
// console.log(dict);
// console.log('keyword_void' in dict);
// console.log('void' in dict);
// return;
var firstToken = lexer.nextToken();
// console.log(firstToken);
while(!lexer.isEOF(firstToken)){
    if(!(firstToken.name in dict)){
        // console.log(firstToken.name in dict);
        // console.log(firstToken);
        // console.log(firstToken.name);
        console.log("/*********************ERROR**********************/\n"+firstToken.value + " is not a valid syntax\n/*********************ERROR**********************/");
        return;
    }
    console.log(firstToken);
    // console.log(firstToken.name);
    firstToken=lexer.nextToken();
    
    // console.log(firstToken.name);
}
console.log("EOF reached");