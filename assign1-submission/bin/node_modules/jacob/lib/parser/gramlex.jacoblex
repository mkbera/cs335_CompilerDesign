
%moduleName JacobGramLexer
%%


%%
<>\/\*    {this.pushState('BLOCKCOMMENT');}
<BLOCKCOMMENT>\*\/    {this.popState();}
<BLOCKCOMMENT>(\n|\r|.) {}

<>\/\/ {this.pushState('LINECOMMENT');}
<LINECOMMENT>[^\n]* {}
<LINECOMMENT>\n {this.popState();}

<>%left|%right|%nonassoc { this.jjval = this.jjtext.substring(1); return 'Op';}
<>%\w+ {this.jjval = this.jjtext.substring(1); return 'Directive'; }
<>'[^'|\']+' { this.jjval = this.jjtext.substring(1,this.jjtext.length-1); return 'Terminal'; }
<>function {this.func=this.jjtext;this.blocklevel=0; this.pushState('FUNCTION');}
<FUNCTION>[^\{\}]* {this.func+=this.jjtext;}
<FUNCTION>[{]   {this.func+=this.jjtext; this.blocklevel++}
<FUNCTION>[}]   {this.func+=this.jjtext; this.blocklevel--; if(this.blocklevel===0) {this.popState(); this.jjtext = this.jjval = this.func; return 'function'; }}
<>\w+ { return 'id'; }
<>\s { //mah }
<>.   { return this.jjtext; }